/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-10-19 11:07:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.backend;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class adminlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>ZUKI | Admin | Sign In</title>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/png\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${assets}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/favicon.png\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css\" />\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"bootstrap.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\" />\r\n");
      out.write("    <style>\r\n");
      out.write("        @import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;500;600;700&family=Open+Sans:wght@400;600;700&display=swap');\r\n");
      out.write("        @font-face {\r\n");
      out.write("            font-family: \"Roboto\";\r\n");
      out.write("            src: url(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("assets/fonts/ROBOTO-LIGHT.TTF\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .logo {\r\n");
      out.write("            height: 100px;\r\n");
      out.write("            background-image: url(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("assets/img/zukilogo.svg\");\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("            background-size: contain;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .title1 {\r\n");
      out.write("            /*font-family: \"Colonna\";*/\r\n");
      out.write("            font-family: 'Dancing Script', cursive;\r\n");
      out.write("            font-size: 40px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .title2 {\r\n");
      out.write("            font-family: \"Roboto\";\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .foot_title {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            font-size: 13px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .background {\r\n");
      out.write("            background-image: url(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("assets/img/Food-delivery-logo.png\");\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("            background-size: contain;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background-image: linear-gradient(to top, #b7213c, #cf5e71, #e091a2, #edc2cf, #f9f4f6);\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid vh-100 d-flex justify-content-center\">\r\n");
      out.write("    <div class=\"row align-content-center\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\" col-12 logo\"></div>\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <p class=\"text-center title1\">Hi, Welcome To ZUKI Admins</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12 p-5\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-6 d-none d-lg-block background\"></div>\r\n");
      out.write("                <div class=\"col-12 col-lg-6 d-block\">\r\n");
      out.write("                    <div class=\"row g-3\">\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <p class=\"title2\">Sign In To Your Account</p>\r\n");
      out.write("                            <p class=\"text-danger\" id=\"errorMessage\"></p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <label class=\"form-label\">Email</label>\r\n");
      out.write("                            <input type=\"email\" class=\"form-control\" name=\"username\" id=\"username\" />\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <label class=\"form-label\">Password</label>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" />\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12 col-sm-6 d-grid\">\r\n");
      out.write("                            <button class=\"btn btn-success btn-sign-in\" >Sign In</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12 col-sm-6 d-grid\">\r\n");
      out.write("                            <button class=\"btn btn-dark\">Back to user's log in</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Modal -->\r\n");
      out.write("        <div class=\"modal fade\" id=\"verificationModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("            <div class=\"modal-dialog\">\r\n");
      out.write("                <div class=\"modal-content\">\r\n");
      out.write("                    <div class=\"modal-header\">\r\n");
      out.write("                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Admin Verification</h5>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-body\">\r\n");
      out.write("                        <label class=\"form-label\">Enter the verification code you got by an email.</label>\r\n");
      out.write("                        <p class=\"text-danger\" id=\"errorMessage2\"></p>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"verification-code\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-footer\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-primary btn-verify\"  >Verify</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Modal -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12 d-none d-lg-block fixed-bottom\">\r\n");
      out.write("            <p class=\"text-center foot_title\">&copy;2023 zuki.com All Right Reserved</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function adminverification() {\r\n");
      out.write("        var verificationModal = document.getElementById(\"verificationModal\");\r\n");
      out.write("        k = new bootstrap.Modal(verificationModal);\r\n");
      out.write("        k.show();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function verify() {\r\n");
      out.write("        k.hide();\r\n");
      out.write("        alert(\"okk\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    document.querySelector('.btn-sign-in').addEventListener('click',function () {\r\n");
      out.write("        let email = document.querySelector(\"#username\").value;\r\n");
      out.write("        let password = document.querySelector(\"#password\").value;\r\n");
      out.write("\r\n");
      out.write("        fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("admin/login',{\r\n");
      out.write("            method:'post',\r\n");
      out.write("            headers:{\r\n");
      out.write("                'Content-Type':'application/json'\r\n");
      out.write("            },\r\n");
      out.write("            body:JSON.stringify({\r\n");
      out.write("                email:email,\r\n");
      out.write("                password:password\r\n");
      out.write("            })\r\n");
      out.write("        }).then(async response=>{\r\n");
      out.write("            if(!response.ok){\r\n");
      out.write("                // console.log(response.text());\r\n");
      out.write("                const errorMessage = await response.text();\r\n");
      out.write("                document.getElementById('errorMessage').innerHTML = errorMessage;\r\n");
      out.write("            }else{\r\n");
      out.write("                adminverification();\r\n");
      out.write("            }\r\n");
      out.write("            return response.json();\r\n");
      out.write("\r\n");
      out.write("        }).then(data=>{\r\n");
      out.write("\r\n");
      out.write("            // localStorage.setItem(\"accessToken\",data.accessToken);\r\n");
      out.write("            // localStorage.setItem(\"refreshToken\",data.refreshToken);\r\n");
      out.write("            // localStorage.setItem(\"expireIn\",data.expireIn);\r\n");
      out.write("\r\n");
      out.write("            //localStorage.setItem(\"token\",JSON.stringify(data));\r\n");
      out.write("            // adminverification();\r\n");
      out.write("            window.location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("admin/login\"\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.querySelector('.btn-verify').addEventListener('click',function () {\r\n");
      out.write("        let vcode = document.querySelector(\"#verification-code\").value;\r\n");
      out.write("\r\n");
      out.write("        fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("admin/verify/'+ vcode,{\r\n");
      out.write("            method:'post',\r\n");
      out.write("\r\n");
      out.write("        }).then(response=>response.text())\r\n");
      out.write("            .then(text=>{\r\n");
      out.write("                if(text=='ok'){\r\n");
      out.write("                    fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("admin/setSession', {\r\n");
      out.write("                        method: 'post',\r\n");
      out.write("                    }).then(response => response.text())\r\n");
      out.write("                        .then(sessionText => {\r\n");
      out.write("                            if (sessionText == 'session-set') {\r\n");
      out.write("                                // Redirect to the homepage\r\n");
      out.write("                                console.log('success set session.');\r\n");
      out.write("                                window.location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BASE_URL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("admin';\r\n");
      out.write("                            } else {\r\n");
      out.write("                                console.log('Failed to set session.');\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                }else{\r\n");
      out.write("                    document.getElementById('errorMessage2').innerHTML = text;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\" integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
